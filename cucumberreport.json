[
  {
    "keyword": "Feature",
    "name": "i am going to validate calculator functionality",
    "line": 1,
    "id": "i-am-going-to-validate-calculator-functionality",
    "tags": [],
    "uri": "features\\demo.feature",
    "elements": [
      {
        "id": "i-am-going-to-validate-calculator-functionality;calculator-add-functionality-testing",
        "keyword": "Scenario",
        "line": 12,
        "name": "Calculator add functionality testing",
        "tags": [
          {
            "name": "@CalculatorTesting",
            "line": 3
          }
        ],
        "type": "scenario",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "match": {
              "location": "stepDefinitions\\hooks.ts:5"
            },
            "result": {
              "status": "passed",
              "duration": 3000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 6,
            "name": "i will navigate to \"http://juliemr.github.io/protractor-demo/\" site",
            "match": {
              "location": "stepDefinitions\\steps.ts:12"
            },
            "result": {
              "status": "passed",
              "duration": 2724000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 7,
            "name": "i will add two numbers \"5\" and \"3\"",
            "match": {
              "location": "stepDefinitions\\steps.ts:16"
            },
            "result": {
              "status": "passed",
              "duration": 148000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 8,
            "name": "output displayed should be \"7\"",
            "match": {
              "location": "stepDefinitions\\steps.ts:23"
            },
            "result": {
              "status": "failed",
              "duration": 1990000000,
              "error_message": "AssertionError\n    + expected - actual\n\n    -8\n    +7\n\n    at D:\\Protractor-workspace\\FrameworkTSCucumber\\stepDefinitions\\steps.ts:27:22\n    at D:\\Protractor-workspace\\FrameworkTSCucumber\\node_modules\\protractor\\built\\element.js:804:32\n    at ManagedPromise.invokeCallback_ (D:\\Protractor-workspace\\FrameworkTSCucumber\\node_modules\\selenium-webdriver\\lib\\promise.js:1376:14)\n    at TaskQueue.execute_ (D:\\Protractor-workspace\\FrameworkTSCucumber\\node_modules\\selenium-webdriver\\lib\\promise.js:3084:14)\n    at TaskQueue.executeNext_ (D:\\Protractor-workspace\\FrameworkTSCucumber\\node_modules\\selenium-webdriver\\lib\\promise.js:3067:27)\n    at D:\\Protractor-workspace\\FrameworkTSCucumber\\node_modules\\selenium-webdriver\\lib\\promise.js:2927:27\n    at D:\\Protractor-workspace\\FrameworkTSCucumber\\node_modules\\selenium-webdriver\\lib\\promise.js:668:7\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stepDefinitions\\hooks.ts:26"
            },
            "result": {
              "status": "passed",
              "duration": 316000000
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ]
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stepDefinitions\\hooks.ts:12"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "node_modules\\protractor-cucumber-framework\\lib\\resultsCapturer.js:27"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ]
      },
      {
        "id": "i-am-going-to-validate-calculator-functionality;calculator-add-functionality-testing",
        "keyword": "Scenario",
        "line": 13,
        "name": "Calculator add functionality testing",
        "tags": [
          {
            "name": "@CalculatorTesting",
            "line": 3
          }
        ],
        "type": "scenario",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "match": {
              "location": "stepDefinitions\\hooks.ts:5"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 6,
            "name": "i will navigate to \"http://juliemr.github.io/protractor-demo/\" site",
            "match": {
              "location": "stepDefinitions\\steps.ts:12"
            },
            "result": {
              "status": "passed",
              "duration": 274000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 7,
            "name": "i will add two numbers \"4\" and \"5\"",
            "match": {
              "location": "stepDefinitions\\steps.ts:16"
            },
            "result": {
              "status": "passed",
              "duration": 120000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 8,
            "name": "output displayed should be \"9\"",
            "match": {
              "location": "stepDefinitions\\steps.ts:23"
            },
            "result": {
              "status": "passed",
              "duration": 1917000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stepDefinitions\\hooks.ts:26"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stepDefinitions\\hooks.ts:12"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "node_modules\\protractor-cucumber-framework\\lib\\resultsCapturer.js:27"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          }
        ]
      },
      {
        "id": "i-am-going-to-validate-calculator-functionality;calculator-add-functionality-testing",
        "keyword": "Scenario",
        "line": 14,
        "name": "Calculator add functionality testing",
        "tags": [
          {
            "name": "@CalculatorTesting",
            "line": 3
          }
        ],
        "type": "scenario",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "match": {
              "location": "stepDefinitions\\hooks.ts:5"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 6,
            "name": "i will navigate to \"http://juliemr.github.io/protractor-demo/\" site",
            "match": {
              "location": "stepDefinitions\\steps.ts:12"
            },
            "result": {
              "status": "passed",
              "duration": 270000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 7,
            "name": "i will add two numbers \"5\" and \"6\"",
            "match": {
              "location": "stepDefinitions\\steps.ts:16"
            },
            "result": {
              "status": "passed",
              "duration": 114000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 8,
            "name": "output displayed should be \"11\"",
            "match": {
              "location": "stepDefinitions\\steps.ts:23"
            },
            "result": {
              "status": "passed",
              "duration": 1927000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stepDefinitions\\hooks.ts:26"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stepDefinitions\\hooks.ts:12"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "node_modules\\protractor-cucumber-framework\\lib\\resultsCapturer.js:27"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          }
        ]
      }
    ]
  }
]